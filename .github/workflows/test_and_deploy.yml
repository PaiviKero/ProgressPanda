name: Test and deploy backend if tests pass

on:
  push:
    branches: [main]

jobs:
  test_backend:
    name: Run Tests on backend
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend

    strategy:
      matrix:
        node-version: [20]

    env:
      NODE_ENV: test

    steps:
      - uses: actions/checkout@v4
      - name: Using Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install
        run: npm ci
      - name: Run linting
        run: npm run lint
      - name: Run tests
        run: npm run coverage
      - name: Check Jest coverage thresholds
        run: |
          if [ -f coverage/coverage-summary.json ]; then
            node -e "
            const { total } = require('./coverage/coverage-summary.json');
            const thresholds = { lines: 95, statements: 100, functions: 100 };
            for (let key in thresholds) {
              if (total[key].pct < thresholds[key]) {
                console.error(\`ERROR: \${key} coverage is below threshold: \${total[key].pct}% < \${thresholds[key]}%\`);
                process.exit(1);
              }
            }
            ";
          else
            echo "ERROR: Coverage summary not found.";
            exit 1;
          fi

  test_frontend:
    name: Run Tests on frontend
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20]

    steps:
      - uses: actions/checkout@v4
      - name: Using Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install
        run: npm ci
      - name: Run linting
        run: npm run lint
      - name: Run tests
        run: npm run test_headless
      - name: Check Karma coverage thresholds
        run: |
          if [ -f coverage/progress-panda/coverage-summary.json ]; then
            node -e "
            const { total } = require('./coverage/progress-panda/coverage-summary.json');
            const thresholds = { lines: 100, statements: 100, functions: 100, branches: 100 };
            for (let key in thresholds) {
              if (total[key].pct < thresholds[key]) {
                console.error(\`ERROR: \${key} coverage is below threshold: \${total[key].pct}% < \${thresholds[key]}%\`);
                process.exit(1);
              }
            }
            ";
          else
            echo "ERROR: Coverage summary not found.";
            exit 1;
          fi

  deploy_backend:
    name: Deploy backend
    needs: [test_backend, test_frontend]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Deploy
        env:
          deploy_url: ${{ secrets.RENDER_BACKEND_DEPLOY_HOOK_URL }}
        run: curl "$deploy_url"

  deploy_frontend:
    name: Deploy frontend
    needs: [test_backend, test_frontend]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Deploy
        env:
          deploy_url: ${{ secrets.RENDER_FRONTEND_DEPLOY_HOOK_URL }}
        run: curl "$deploy_url"
